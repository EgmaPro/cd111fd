-- Auto Car Hunter Pro by Colin
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local localPlayer = Players.LocalPlayer

local Hunting = false
local TargetCarName = ""

-- Создаем расширенный GUI
function CreateGUI()
    pcall(function()
        if game:GetService("CoreGui"):FindFirstChild("CarHunterProGUI") then
            game:GetService("CoreGui").CarHunterProGUI:Destroy()
        end
    end)
    
    local ScreenGui = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local Title = Instance.new("TextLabel")
    local InputFrame = Instance.new("Frame")
    local CarInput = Instance.new("TextBox")
    local SetButton = Instance.new("TextButton")
    local ToggleButton = Instance.new("TextButton")
    local StatusLabel = Instance.new("TextLabel")
    local CloseButton = Instance.new("TextButton")
    
    ScreenGui.Name = "CarHunterProGUI"
    ScreenGui.Parent = game:GetService("CoreGui")
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(0.75, 0, 0.2, 0)
    MainFrame.Size = UDim2.new(0, 250, 0, 200)
    MainFrame.Active = true
    MainFrame.Draggable = true
    
    Title.Name = "Title"
    Title.Parent = MainFrame
    Title.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    Title.Size = UDim2.new(1, 0, 0, 30)
    Title.Font = Enum.Font.SourceSansBold
    Title.Text = "CAR HUNTER PRO"
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 16
    
    InputFrame.Name = "InputFrame"
    InputFrame.Parent = MainFrame
    InputFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
    InputFrame.Position = UDim2.new(0.05, 0, 0.2, 0)
    InputFrame.Size = UDim2.new(0.9, 0, 0, 40)
    
    CarInput.Name = "CarInput"
    CarInput.Parent = InputFrame
    CarInput.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
    CarInput.Position = UDim2.new(0.05, 0, 0.2, 0)
    CarInput.Size = UDim2.new(0.6, 0, 0.6, 0)
    CarInput.Font = Enum.Font.SourceSans
    CarInput.PlaceholderText = "Enter car name..."
    CarInput.Text = ""
    CarInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    CarInput.TextSize = 14
    CarInput.ClearTextOnFocus = false
    
    SetButton.Name = "SetButton"
    SetButton.Parent = InputFrame
    SetButton.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
    SetButton.Position = UDim2.new(0.7, 0, 0.2, 0)
    SetButton.Size = UDim2.new(0.25, 0, 0.6, 0)
    SetButton.Font = Enum.Font.SourceSansBold
    SetButton.Text = "SET"
    SetButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    SetButton.TextSize = 14
    
    ToggleButton.Name = "ToggleButton"
    ToggleButton.Parent = MainFrame
    ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
    ToggleButton.Position = UDim2.new(0.05, 0, 0.45, 0)
    ToggleButton.Size = UDim2.new(0.9, 0, 0, 35)
    ToggleButton.Font = Enum.Font.SourceSansBold
    ToggleButton.Text = "START HUNTING"
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.TextSize = 16
    ToggleButton.Visible = false
    
    StatusLabel.Name = "StatusLabel"
    StatusLabel.Parent = MainFrame
    StatusLabel.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
    StatusLabel.Position = UDim2.new(0.05, 0, 0.65, 0)
    StatusLabel.Size = UDim2.new(0.9, 0, 0, 50)
    StatusLabel.Font = Enum.Font.SourceSans
    StatusLabel.Text = "Enter car name and press SET"
    StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    StatusLabel.TextSize = 14
    StatusLabel.TextWrapped = true
    
    CloseButton.Name = "CloseButton"
    CloseButton.Parent = MainFrame
    CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    CloseButton.Position = UDim2.new(0.9, -20, 0.02, 0)
    CloseButton.Size = UDim2.new(0, 20, 0, 20)
    CloseButton.Font = Enum.Font.SourceSansBold
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 12
    
    -- Обработчики событий
    SetButton.MouseButton1Click:Connect(function()
        if CarInput.Text ~= "" then
            TargetCarName = CarInput.Text
            ToggleButton.Visible = true
            UpdateStatus("Ready to hunt: "..TargetCarName)
            CarInput.Text = ""
        else
            UpdateStatus("Please enter a car name!")
        end
    end)
    
    ToggleButton.MouseButton1Click:Connect(function()
        Hunting = not Hunting
        if Hunting then
            ToggleButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
            ToggleButton.Text = "STOP HUNTING"
            UpdateStatus("Hunting for: "..TargetCarName)
            FindCarOnServer(TargetCarName)
        else
            ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
            ToggleButton.Text = "START HUNTING"
            UpdateStatus("Stopped. Ready for: "..TargetCarName)
        end
    end)
    
    CloseButton.MouseButton1Click:Connect(function()
        Hunting = false
        ScreenGui:Destroy()
    end)
    
    -- Enter для установки названия
    CarInput.FocusLost:Connect(function(enterPressed)
        if enterPressed and CarInput.Text ~= "" then
            TargetCarName = CarInput.Text
            ToggleButton.Visible = true
            UpdateStatus("Ready to hunt: "..TargetCarName)
            CarInput.Text = ""
        end
    end)
    
    return StatusLabel
end

-- Функция поиска машины
function FindCarOnServer(CarName)
    if not Hunting then return end
    
    UpdateStatus("Scanning server for: "..CarName)
    local CarFound = false
    local TargetBooth = nil
    
    local Map = workspace:FindFirstChild("Map")
    if not Map then 
        UpdateStatus("Error: No Map found!")
        wait(2)
        ServerHop()
        return 
    end
    
    local PlayerBooths = Map:FindFirstChild("PlayerBooths")
    if not PlayerBooths then 
        UpdateStatus("Error: No PlayerBooths!")
        wait(2)
        ServerHop()
        return 
    end
    
    local booths = PlayerBooths:GetChildren()
    UpdateStatus("Scanning "..#booths.." booths...")
    
    for i, BoothFolder in ipairs(booths) do
        if not Hunting then break end
        
        if i % 10 == 0 then -- Обновляем статус каждые 10 будок
            UpdateStatus("Scanning... "..i.."/"..#booths)
            wait(0.1)
        end
        
        local MainBooth = BoothFolder:FindFirstChild("PlayerBooth")
        if MainBooth then
            local SignText = MainBooth:FindFirstChild("SignText")
            if SignText then
                local SurfaceGui = SignText:FindFirstChild("SurfaceGui")
                if SurfaceGui then
                    local ScrollingFrame = SurfaceGui:FindFirstChild("ScrollingFrame")
                    if ScrollingFrame then
                        for _, ImageLabel in ipairs(ScrollingFrame:GetChildren()) do
                            if not Hunting then break end
                            if ImageLabel:IsA("ImageLabel") then
                                local Title = ImageLabel:FindFirstChild("Title")
                                if Title then
                                    local TextLabel = Title:FindFirstChild("TextLabel")
                                    if TextLabel and string.upper(TextLabel.Text) == string.upper(CarName) then
                                        CarFound = true
                                        TargetBooth = MainBooth
                                        UpdateStatus("FOUND: "..CarName.."!")
                                        break
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if CarFound then break end
    end
    
    if CarFound and TargetBooth then
        if localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
            localPlayer.Character:MoveTo(TargetBooth.Position + Vector3.new(0, 5, 0))
            UpdateStatus("Teleported to "..CarName.."!")
            wait(5)
        end
    else
        UpdateStatus(CarName.." not found. Server hopping...")
        wait(2)
        ServerHop()
    end
end

-- Функция смены сервера (оптимизированная)
function ServerHop()
    if not Hunting then return end
    
    UpdateStatus("Finding new server...")
    local PlaceID = game.PlaceId
    local AllIDs = {}
    local foundAnything = ""
    
    -- Читаем историю серверов
    local success, fileData = pcall(readfile, "CarHunterServers.json")
    if success then
        AllIDs = HttpService:JSONDecode(fileData)
    else
        table.insert(AllIDs, tostring(os.date("!*t").hour))
    end
    
    local function FindNewServer()
        local url = foundAnything == "" and 
            "https://games.roblox.com/v1/games/"..PlaceID.."/servers/Public?sortOrder=Asc&limit=100" or
            "https://games.roblox.com/v1/games/"..PlaceID.."/servers/Public?sortOrder=Asc&limit=100&cursor="..foundAnything
        
        local success, Site = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(url))
        end)
        
        if not success then
            UpdateStatus("Error: Could not get server list")
            return
        end
        
        if Site.nextPageCursor and Site.nextPageCursor ~= "null" then
            foundAnything = Site.nextPageCursor
        end
        
        for _, server in ipairs(Site.data) do
            if not Hunting then break end
            
            local serverID = tostring(server.id)
            local canJoin = true
            
            for _, visitedID in ipairs(AllIDs) do
                if serverID == tostring(visitedID) then
                    canJoin = false
                    break
                end
            end
            
            if canJoin and tonumber(server.playing) < tonumber(server.maxPlayers) then
                table.insert(AllIDs, serverID)
                
                pcall(function()
                    writefile("CarHunterServers.json", HttpService:JSONEncode(AllIDs))
                end)
                
                UpdateStatus("Joining server "..serverID:sub(1, 8).."...")
                TeleportService:TeleportToPlaceInstance(PlaceID, serverID, localPlayer)
                wait(5)
                return true
            end
        end
        return false
    end
    
    if not FindNewServer() and foundAnything ~= "" then
        FindNewServer()
    end
end

function UpdateStatus(text)
    local gui = game:GetService("CoreGui"):FindFirstChild("CarHunterProGUI")
    if gui and gui:FindFirstChild("MainFrame") then
        local StatusLabel = gui.MainFrame.StatusLabel
        StatusLabel.Text = text
    end
end

-- Запускаем скрипт
CreateGUI()
UpdateStatus("Welcome! Enter any car name to hunt")

print("Auto Car Hunter Pro loaded!")
print("Enter any car name in the GUI and press SET")
